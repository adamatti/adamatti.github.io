{"pageProps":{"slug":"javascript","jobs":[{"id":"1","title":"Senior Software Engineer","description":"Node engineer","startDate":"2022-10-31T00:00:00.000Z","endDate":"2023-02-13T00:00:00.000Z","agency":{"id":"2","name":"Clevertech","logo":"clevertech.jpeg","url":"https://clevertech.biz"},"company":{"id":"1","name":"Laurel","logo":"laurel.jpeg","url":"https://www.laurel.ai/"},"projects":[{"id":"1","title":"Ingestion / Export systems","description":"Create pipelines to collect data from clients, do machine learning process and return it to clients, supporting multiple formats. Project started from scratch, deployed to prod.","results":"New connectors where the client could easy / quickly onboard their clients","keywords":["nestjs","typescript","mongo","terraform","kubernetes"],"result":null}]},{"id":"2","title":"Senior Backend Architect","description":"Node engineer","startDate":"2022-03-28T00:00:00.000Z","endDate":"2022-10-25T00:00:00.000Z","agency":null,"company":{"id":"3","name":"Demand.io","logo":"demandio.jpeg","url":"https://demand.io"},"projects":[{"id":"2","title":"AWS to GCP migration","description":"Create helm configurations and k8s configs to reduce aws usage and configuration costs","results":null,"keywords":["aws","gcp","kubernetes","helm","scala","php"],"result":"Systems migrated"},{"id":"3","title":"Gamification","description":"Create backend infrastructure to track actions and give point based on events","results":"New functionalities to attract new user and retain old ones","keywords":["nodejs","nestjs","typescript","type-orm","mysql","microservices"],"result":null}]},{"id":"3","title":"Senior Software Engineer","description":"Go/Node engineer","startDate":"2021-01-04T00:00:00.000Z","endDate":"2022-03-25T00:00:00.000Z","agency":{"id":"4","name":"X-Team","logo":"x-team.jpeg","url":"https://x-team.com/"},"company":{"id":"5","name":"Fox","logo":"fox.jpeg","url":"https://fox.com/"},"projects":[{"id":"4","title":"Platform","description":"Asset (e.g. video, thumbnails, closed captions, etc) ingestion and indexing","results":"Modernize the system, speeding up new integrations and rationalize data usage","keywords":["golang","nodejs","aws","elasticsearch"],"result":null}]},{"id":"6","title":"Senior Software Engineer","description":"Working with bigdata, microservice, data science building chatbots","startDate":"2017-04-10T00:00:00.000Z","endDate":"2019-03-29T00:00:00.000Z","agency":null,"company":{"id":"8","name":"Zenvia","logo":"zenvia.jpeg","url":"http://www.zenvia.com"},"projects":[{"id":"11","title":"Chatbots","description":"product for end user","results":null,"keywords":["java","spring","postgres","aws","nodejs","typescript","mongo","big data","scala","golang","kotlin","vue","kubernetes"],"result":"New product from scratch, a chatbot flow designer where big companies could trigger conversations (e.g. update addresses), automate FAQs, etc"}]},{"id":"8","title":"Technical Lead","description":"Tech Lead in a global app. Using Node/Groovy/Docker","startDate":"2015-09-16T00:00:00.000Z","endDate":"2016-12-09T00:00:00.000Z","agency":{"id":"10","name":"ilegra","logo":"ilegra.jpeg","url":"http://ilegra.com"},"company":{"id":"11","name":"AGCO","logo":"agco.jpeg","url":"https://www.agcocorp.com/"},"projects":[{"id":"12","title":"Feature Unlock","description":"Order placement/purchase system (orchestrator), created using event sourcing and integrating with legacy systems (e.g. mainframe, ftp)","results":"System created from scratch with modern technology enabling dealers to speed up sales","keywords":["nodejs","groovy","apache camel","event sourcing","hypermedia API","java"],"result":null}]}],"posts":[{"slug":"2024-09-06-yarn","title":"Yarn Classic","summary":"It is time to move on","dateString":"2024-09-06","tags":["javascript","nodejs"],"content":"\nHey, are you using [yarn](https://classic.yarnpkg.com)? Great tool from [Facebook](https://facebook.com), right?\n\nBut how are you installing it?\n\n`npm install -g yarn`?\n\n### I have a bad news to tell you...\n\n> Yarn has not been distributed on npm since 2019 because of breaking changes that could impact deployments - Google AI\n\nand\n\n> Those versions entered maintenance mode in January 2020 - [yarn classic website](https://classic.yarnpkg.com/lang/en/docs/install)\n\n### So, what should I do?\n\nNeed to consider a better/newer package manager.\n\nIt could be:\n\n- [the new yarn version](https://yarnpkg.com/): as of today (09/06), it is on version 4.4.1\n- [PNPM](https://pnpm.io/), the faster alternative\n- [The NPM itself](https://www.npmjs.com/). The official tool. In 2024, it is faster than yarn classic\n\nThere are a lot of benchmarks out there, like:\n\n- https://romanglushach.medium.com/comparing-npm-yarn-and-pnpm-package-managers-which-one-is-right-for-your-distributed-project-to-4d7de2f0db8e\n- https://refine.dev/blog/pnpm-vs-npm-and-yarn\n- https://www.dhiwise.com/post/pnpm-vs-npm-vs-yarn-which-javascript-package-manager\n\n### How about me?\n\nI am using [PNPM](https://pnpm.io/) in my latest projects, both pet and professional, but already had some issues with it.\n\nIt all case by case, but I strongly recommend to use [PNPM](https://pnpm.io/) for fast local builds and CI.\n"},{"slug":"2024-04-18-taskfile","title":"Taskfile - an alternative for Makefiles","summary":"A 5 minutes tutorial","dateString":"2024-04-18","tags":["javascript","typescript","tools"],"content":"\nOk, Make/Makefiles are great. I spoke about then in the [last post](/blog/posts/2024-04-08-makefile).\n\nBut what if:\n\n- I want to break them in different files\n- Use a better syntax (maybe yaml?)\n- Cache the tasks, even the ones that don't generate artifacts (e.g. lint)\n- put tasks and aliases close\n- validate the task execution\n- have global tasks to run in any folder (e.g. backup)\n- dry run\n- watch task\n\n#### Taskfile to rescue\n\nJust need to [install Task](https://taskfile.dev/installation/) (or go-task on [github](https://github.com/go-task/task)).\n\nThe [documentation](https://taskfile.dev/) is pretty simple IMHO, but I want to highlight some things that I do use in daily bases that I think it does a great difference.\n\n## Show me the code\n\nFor this I will use the sample from [previous post](/blog/posts/2024-04-08-makefile) ([makefile here](https://github.com/adamatti/node-sample/blob/main/Makefile))\n\n```yaml\n# yaml-language-server: $schema=https://json.schemastore.org/taskfile.json\n---\nversion: '3'\n\nenv:\n  DATABASE_URL: postgres://postgres:sample@localhost:5432/sample\n\nincludes:\n  docker-compose:\n    aliases: [dc]\n    taskfile: ./Taskfile-docker-compose.yaml\n  prisma:\n    aliases: [p]\n    taskfile: ./Taskfile-prisma.yaml\n\ntasks:\n  default:\n    desc: Show help\n    aliases: [h]\n    silent: true\n    cmds:\n      - task -l --sort alphanumeric\n\n  clean:\n    desc: Remove node modules\n    aliases: [c]\n    cmds:\n      - rm -rf node-modules\n\n  install:\n    desc: Install dependencies\n    aliases: [i]\n    run: once\n    cmds:\n      - npm install\n    preconditions:\n      - test -f package.json\n      - test -f package-lock.json\n    sources:\n      - package.json\n      - package-lock.json\n    status:\n      - test -d node_modules\n\n  run-only:\n    aliases: [ro]\n    interactive: true\n    ignore_error: true\n    dotenv: ['.env']\n    cmds:\n      - task: install\n      - task: prisma:generate\n      - npx --yes esno src/index.ts\n\n  run:\n    desc: Run the project\n    aliases: [r]\n    cmds:\n      - task: docker-compose:up\n      - task: prisma:push\n      - task: run-only\n```\n\nThere are a lot of things going on here, so trying to explain some things:\n\n1. The first line is just for auto complete on IDEs (like vscode, zed)\n2. We can define global env vars in the script itself (e.g. `DATABASE_URL`)\n3. We can [import](https://taskfile.dev/usage/#including-other-taskfiles) part of the scripts. You just need to have your global ones (e.g. terraform, docker-compose, prisma, git, etc). It does work with remote files.\n4. You can expose/hide tasks with [internal flag](https://taskfile.dev/usage/#internal-tasks)\n\n## Now the best part - cache\n\nPay a close look on the install task.\n\n1. it only runs if `package.json` and `package-lock.json` are present ([programatic checks](https://taskfile.dev/usage/#using-programmatic-checks-to-cancel-the-execution-of-a-task-and-its-dependencies))\n2. [Prevent unnecessary work](https://taskfile.dev/usage/#prevent-unnecessary-work): it caches the execution using the `source` attribute.\n3. at the end it checks if the `node_modules` folder was created.\n4. Even caching based on the `source`, if you remove the `node_modules` folder (check) it will run again.\n\nSo, you just need to run your daily tasks (e.g. tests, lints, run local) and the script itself will detect what is pending and run it if needed.\n\nNo more crazy issues that you forgot to update a dependency or database change.\n\n## Ok, show me a normal day of work\n\nAt the first time, you just need to run `task r` to run the app. It will install dependencies, start database, apply db changes and run the app.\n\nBut what happen if someone changes a dependency? No problem. Taskfile will detect and will run `npm install` again.\n\nBut if someone just changes the db schema? No problem. It will generate the classes again.\n\nIf nothing changes, it will just run the app (ok, the docker part is not optimized, but you got the idea).\n\nIf need to stop the app and run again you can go direct to `task ro` (ro = run only).\n\n## Full Project\n\nAs always, the full sample is available on [github](https://github.com/adamatti/node-sample).\n\n## Closing thoughts\n\nNow go to the [documentation](https://taskfile.dev/usage/).\n\nRemove commands from `README.md` files and confluence/sharepoint. Also remove it from anemic `package.json` ðŸ˜›\n\nMy global taskfiles are shared [here](https://github.com/adamatti/dotfiles/tree/main/taskfile) for reference.\n\nMy backup scripts using rsync are also on taskfiles, but this is a subject for another post.\n\n"},{"slug":"2024-04-08-makefile","title":"Makefiles - How to use them for automations","summary":"A 5 minutes tutorial","dateString":"2024-04-08","tags":["javascript","typescript","tools"],"content":"\nImagine the follow scenario: you do have a node api with typescript, that uses a database (postgres in this sample) and an orm ([prisma](https://www.prisma.io/)). Every time someone in the team adds a new dependency, you need to run `npm install`. \n\nDatabase changes? You need to generate the classes again with `npm run prisma generate`. Oh, you also need to apply the changes with `npm run prisma db push` (note: a real world project would use migrations files, so `npm run prisma migrate dev`).\n\nThen you moved to another service. Then moved back... oh, now need to start database again with `docker-compose up -d`. And so one... \n\nThe steps are documented in a readme file. Or you can get it from `package.json` -> `scripts`, but there is no comments there or command order/dependence. \n\nWhat do you do? \n\n#### Makefile to rescue\n\nSo, Make is a build automation tool (thanks [wikipedia](https://en.wikipedia.org/wiki/Make_(software)), and it is available by default in all unix systems.\n\nWith that you can:\n- create goals (tasks)\n- create multi line commands\n- use vars\n- use conditions\n- create aliases for the commands\n- map task dependencies\n- avoid re-running a task if artifact is already created (e.g. build). \"Kind\" of a cache (strong quotes here)\n\n#### So, show me a sample!\n\nSure... check this one (full project [here](https://github.com/adamatti/node-sample)):\n\n```makefile\ndefault:\n\t@echo \"Please specify a target to run\"\n\nclean:\n\trm -rf node_modules\n\nnode_modules:\n\tnpm install\n\ndocker-compose-up:\n\tdocker-compose up -d\n\nprisma-db-push:\n\tnpx --yes wait-on tcp:5432 && \\\n\tDATABASE_URL=postgres://postgres:sample@localhost:5432/sample npm run prisma db push\n\nprisma-generate:\n\tnpm run prisma generate\n\nrun-only:\n\tDATABASE_URL=postgres://postgres:sample@localhost:5432/sample \\\n\tnpx --yes esno src/index.ts\n\nrun: docker-compose-up prisma-generate prisma-db-push run-only\n\nformat:\n\tnpm run prisma format\n\tnpx --yes biome format --write ./src\n\n# Aliases\ninstall: node_modules\ndcu: docker-compose-up\npdp: prisma-db-push\npg: prisma-generate\nr: run\nro: run-only\nfirst: clean install run\nfresh: first\nf: fresh\n```\n\nAs you can see, a simple task is just \n\n```makefile\ntaskname: dependency1 dependency2\n    my list of commands\n    second command here\n    etc\n```\n\nwith the sample provided, I can install dependencies with `make node_modules`. \n\nIf you run it again, it will do nothing as the `node_modules` folder is already present (task name = folder name).\n\nIf I want to run my app the first time, I just need `make fresh`, and it will:\n- install dependencies\n- start database\n- generate orm classes\n- update database\n- run the app\n\nIf I want to run the app again, I don't need the full steps. I can go direct to `make run-only`.\n\n#### Ok, I am lazy than that\n\nWith dependencies, you can create aliases. e.g.\n\n```makefile\nr: run\nro: run-only\n```\n\nNow I just need `make r` to run my app. Or `make ro` to run-only.\nNote: I am lazier than that, I also [have an alias](https://github.com/adamatti/dotfiles/blob/bb23c786a3181b977874efe83530b65ec5de804a/zsh/aliases.zsh#L3) to run `make` with `m` only ðŸ˜›\n\n#### How about the default task?\n\nIt uses the first task. Or the one defined on `.DEFAULT_GOAL := help` (add it as one of the first lines).\n\n#### Ok, but how about documentation\n\nThere is a [trick](https://marmelab.com/blog/2016/02/29/auto-documented-makefile.html) for that - just add those lines in the beginning of the file:\n\n```makefile\n.PHONY: help\n\nhelp:\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'\n```\n\n...plus, `## comment` in the tasks you want comments. E.g.\n\n```makefile\nclean: ## remove dependencies\n\trm -rf node_modules\n\nprisma-generate: ## generate prisma classes\n\tnpm run prisma generate\n```\n\nNow you just need to run `make` or `make help` to see all tasks and comments, sorted by task name, e.g.\n\n```shell\n> make help\nclean                          remove dependencies\ndocker-compose-up              start dependencies\nfirst                          first execution\nformat                         format code\nfresh                          fresh execution\ninstall                        install dependencies\nprisma-db-push                 push prisma schema to database\nprisma-generate                generate prisma classes\nrun-only                       run the project\nrun                            run the project + dependencies\n```\n\n#### Advanced\n\n- How to hide the command from output? Just add `@` in the front of the command.\n- call an existing task in the middle/end of my commands? `$(MAKE) your task`\n- cache task? the task should match with the output folder or file name\n\n#### Show me the full project\n\nIt is [here](https://github.com/adamatti/node-sample), and the makefile is [here](https://github.com/adamatti/node-sample/blob/main/Makefile)\n\n#### Why post about makefile?\n\nBecause this is the [most watched video on my channel](https://www.youtube.com/watch?v=h4aV3C6BRDQ). And a lot of developers still adding commands on readme files on partially on package.json. We developers should automate things, even our daily tasks."},{"slug":"2024-04-05-vinejs","title":"Vinejs - js validation lib","summary":"An alternative to zod","dateString":"2024-04-05","tags":["javascript","typescript"],"content":"\nJust saw this new lib today - [Vinejs](https://vinejs.dev/). It called my attention as it is very similar to [zod](https://zod.dev/), but seems to be faster. Definitely I will consider it for my next pet projects.\n\n#### Basic Example\n\n```typescript\nimport vine from '@vinejs/vine'\n\nconst schema = vine.object({\n  email: vine.string().email(),\n  password: vine\n    .string()\n    .minLength(8)\n    .maxLength(32)\n    .confirmed()\n})\n\nconst data = getDataToValidate()\nawait vine.validate({ schema, data })\n```\n\n#### Benchmarks\n\n<div style=\"align:center\">\n  ![Benchmarks](/assets/posts/2024-04-05-vinejs/benchmark.jpg)\n</div>"}],"events":[{"id":"3","name":"Node POA Meetup","talk":"Event Sourcing","description":"Presentation about event sourcing and how we implemented it at AGCO","date":"2016-07-12","tags":["node","javascript","js"],"links":{"slides":"http://slides.com/adamatti/eventsourcing","recording":"https://www.youtube.com/watch?v=ATWEXZkYgek","github":"https://github.com/node-poa/2-meetup","meetup":"https://www.meetup.com/pt-BR/Node-js-Porto-Alegre-Meetup"}},{"id":"7","name":"TDC POA - javascript","talk":"Event sourcing","description":"Presentation about event sourcing and how we implemented it at AGCO","date":"2016-10-05","tags":["node","javascript"," js"],"links":{"slides":"http://slides.com/adamatti/eventsourcing","tweet":"https://twitter.com/alinedecampos/status/783759425106505728","page":"http://www.thedevelopersconference.com.br/tdc/2016/portoalegre/trilha-javascript"}},{"id":"8","name":"TDC POA - architecture","talk":"Event sourcing","description":"Presentation about event sourcing and how we implemented it at AGCO","date":"2016-10-07","tags":["node","javascript","js"],"links":{"slides":"http://slides.com/adamatti/tdc_poa_2016_event_sourcing_arch","tweet1":"https://twitter.com/__cure/status/784461126474067969","tweet2":"https://twitter.com/toff63/status/784460801511985152","page":"http://www.thedevelopersconference.com.br/tdc/2016/portoalegre/trilha-arquitetura"}},{"id":"9","name":"Node POA Meetup","talk":"Why Node","description":"Talk describing the advantages of node (e.g. why Paypal was replacing java by js)","date":"2017-03-14","tags":["node","javascript","js"],"links":{"slides":"http://slides.com/adamatti/whynode","pptx":"https://drive.google.com/file/d/0B2LXDhHXNPKxWmlFSUR4aVMyRkE/view?usp=drivesdk","github":"https://github.com/node-poa/Meetups/blob/master/meetups/04.md","meetup":"https://www.meetup.com/pt-BR/Node-js-Porto-Alegre-Meetup","photos":"https://goo.gl/photos/QG28BpEp2ec7mnsa9","recording":"https://www.youtube.com/watch?v=ZKPBtsoaA-4"}},{"id":"20","name":"Meetup Microservices","talk":"Interagindo com APIs","description":"Talk about different ways to expose data and fetch it together, e.g. hypermedia apis, graphql, restql, gRpc, etc","date":"2019-10-30","tags":["java","javascript","node","microservices","js"],"links":{"github":"https://github.com/adamatti/talk_microservices_apis","event":"https://www.meetup.com/pt-BR/Microservices-Porto-Alegre/events/265726501/","slides":"https://slides.com/adamatti/talk_microservices_apis","ppt":"https://docs.google.com/presentation/d/1IMTzCLEg4UVHSSsHHT7knsmU7XVj5iUcMqk4Lz0gcJM/edit?usp=sharing"}}],"technologies":[{"id":"1","name":"javascript","color":"amber-300","image":"javascript.jpeg","tags":["language","love","js","typescript"],"since":"2015-09-01T00:00:00.000Z"},{"id":"2","name":"typescript","color":"sky-600","image":"typescript.jpeg","tags":["language","love","javascript","js"],"since":"2017-04-01T00:00:00.000Z"},{"id":"24","name":"Graphql","color":"pink-500","image":"graphql.png","tags":["frontend","typescript","javascript","js"],"since":"2015-09-01T00:00:00.000Z"},{"id":"26","name":"Nest.js","color":"rose-600","image":"nestjs.jpeg","tags":["framework","javascript","js","typescript"],"since":"2022-03-01T00:00:00.000Z"},{"id":"27","name":"Next.js","color":"zinc-700","image":"nextjs.png","tags":["framework","javascript","js","typescript"],"since":"2021-01-01T00:00:00.000Z"},{"id":"28","name":"React","color":"cyan-300","image":"react.png","tags":["frontend","javascript","js","typescript"],"since":"2021-01-01T00:00:00.000Z"}],"videos":[{"id":"3","title":"Event Sourcing","description":"Presentation about event sourcing and how we implemented it at AGCO","url":"https://www.youtube.com/watch?v=ATWEXZkYgek","embedId":"ATWEXZkYgek","tags":["node","javascript","js"]},{"id":"9","title":"Why Node","description":"Talk describing the advantages of node (e.g. why Paypal was replacing java by js)","url":"https://www.youtube.com/watch?v=ZKPBtsoaA-4","embedId":"ZKPBtsoaA","tags":["node","javascript","js"]},{"id":"37","title":"Hypermedia APIs com harvesterjs","description":"How to create hypermedia APIs with this custom framework","url":"https://www.youtube.com/watch?v=HIONwSrc-Rk","embedId":"HIONwSrc","tags":["nodejs","javascript"]}],"petProjects":[{"id":"792505141","name":"learn-git-crypt","url":"https://github.com/adamatti/learn-git-crypt","description":null,"createdAt":"2024-04-26T20:09:40Z","language":"JavaScript","topics":[]},{"id":"635826827","name":"learn-fireblocks","url":"https://github.com/adamatti/learn-fireblocks","description":"Pet project to play with fireblocks","createdAt":"2023-05-03T14:33:57Z","language":"TypeScript","topics":["crypto","fireblocks","javascript","typescript"]},{"id":"602808315","name":"adamatti.github.io","url":"https://github.com/adamatti/adamatti.github.io","description":"Create a new version of https://adamatti.github.io, now with react","createdAt":"2023-02-17T01:27:04Z","language":"TypeScript","topics":["blog","graphql","javascript","js","react","tailwind","typescript"]},{"id":"597909775","name":"superapp","url":"https://github.com/adamatti/superapp","description":"Merging pet projects and optimizing resources","createdAt":"2023-02-06T01:01:02Z","language":"TypeScript","topics":["javascript","js","nestjs","react","typescript"]},{"id":"563889212","name":"lambda_unzip","url":"https://github.com/adamatti/lambda_unzip","description":"This is a pet project, just a lambda(nodejs) to unzip files on s3","createdAt":"2022-11-09T14:51:44Z","language":"HCL","topics":["javascript","js","lambda","nodejs","terraform"]},{"id":"557864566","name":"mysql_to_redshift","url":"https://github.com/adamatti/mysql_to_redshift","description":"Small script to load mysql data to redshift","createdAt":"2022-10-26T12:59:09Z","language":"TypeScript","topics":["javascript","js","mysql","nodejs","redshift","typescript"]},{"id":"476452035","name":"github-actions-test","url":"https://github.com/adamatti/github-actions-test","description":"Pet projet to learn github actions","createdAt":"2022-03-31T19:37:13Z","language":"JavaScript","topics":["javascript","js","nodejs"]},{"id":"434233758","name":"advent-of-code","url":"https://github.com/adamatti/advent-of-code","description":"My solutions for https://adventofcode.com/","createdAt":"2021-12-02T13:35:33Z","language":"JavaScript","topics":["golang","javascript","js"]},{"id":"419130877","name":"wiki-nextjs","url":"https://github.com/adamatti/wiki-nextjs","description":"Pet project to learn nextjs","createdAt":"2021-10-20T00:17:33Z","language":"TypeScript","topics":["javascript","js","nextjs","typescript","wiki"]},{"id":"404828395","name":"adamatti-npm-libs","url":"https://github.com/adamatti/adamatti-npm-libs","description":"Pet project to test lerna / husky / circle ci / npm publish.","createdAt":"2021-09-09T18:24:32Z","language":"Makefile","topics":["javascript","js","typescript"]},{"id":"383848508","name":"terraform-like","url":"https://github.com/adamatti/terraform-like","description":"Pet project to create AWS artifacts (e.g. s3, sqs, dynamo) on localstack","createdAt":"2021-07-07T15:42:06Z","language":"JavaScript","topics":["aws","javascript","js","terraform"]},{"id":"342653921","name":"LearnZipkin","url":"https://github.com/adamatti/LearnZipkin","description":"Pet project to learn zipkin (tracing)","createdAt":"2021-02-26T17:44:08Z","language":"Go","topics":["golang","java","javascript","js","jvm","nodejs"]},{"id":"292731094","name":"LearnHubotDiscord","url":"https://github.com/adamatti/LearnHubotDiscord","description":"Pet project to create a discord bot","createdAt":"2020-09-04T02:40:45Z","language":"Makefile","topics":["chatbot","discord","discord-bot","hubot","javascript","js"]},{"id":"257461022","name":"asciidoctor-server","url":"https://github.com/adamatti/asciidoctor-server","description":"Similar to markserv, but for asciidoc","createdAt":"2020-04-21T02:39:28Z","language":"EJS","topics":["javascript","js","lib"]},{"id":"171135990","name":"json-server-api","url":"https://github.com/adamatti/json-server-api","description":"Based on json-server, but with plans to expand","createdAt":"2019-02-17T15:08:42Z","language":"TypeScript","topics":["graphql","javascript","js","nodejs","typescript"]},{"id":"155613119","name":"LearnSonar","url":"https://github.com/adamatti/LearnSonar","description":"Pet project to show how to publish metrics to sonar","createdAt":"2018-10-31T19:35:00Z","language":"Java","topics":["gradle","groovy","java","javascript","js","jvm","nodejs","sonar","sonarqube","typescript"]},{"id":"106339054","name":"LearnKafka","url":"https://github.com/adamatti/LearnKafka","description":"Pet project to test kafka client","createdAt":"2017-10-09T21:51:02Z","language":"Groovy","topics":["groovy","javascript","kafka","nodejs"]},{"id":"105092667","name":"express-actuator-alt","url":"https://github.com/adamatti/express-actuator-alt","description":"Plugin based on express-actuator to work with spring-boot-admin","createdAt":"2017-09-28T02:26:33Z","language":"JavaScript","topics":["expressjs","javascript","nodejs","npm","spring"]},{"id":"103082352","name":"LearnLerna","url":"https://github.com/adamatti/LearnLerna","description":"Pet project to learn Lerna","createdAt":"2017-09-11T02:49:54Z","language":"JavaScript","topics":["javascript","lernajs","monorepo","nodejs"]},{"id":"99867780","name":"SandboxNode","url":"https://github.com/adamatti/SandboxNode","description":"Nodejs experiments","createdAt":"2017-08-10T01:31:36Z","language":"JavaScript","topics":["express","javascript","nodejs"]},{"id":"91861861","name":"LearnHubot","url":"https://github.com/adamatti/LearnHubot","description":"Pet project to learn Hubot","createdAt":"2017-05-20T03:11:27Z","language":"JavaScript","topics":["chatbot","hubot","javascript","js","nodejs"]},{"id":"88857373","name":"LearnNode","url":"https://github.com/adamatti/LearnNode","description":"Pet project to play with node","createdAt":"2017-04-20T11:19:54Z","language":"JavaScript","topics":["javascript","js","nodejs"]},{"id":"81368702","name":"SfdcHerokuConnect","url":"https://github.com/adamatti/SfdcHerokuConnect","description":"Pet project to demonstrate heroku connect (with SalesForce.com) ","createdAt":"2017-02-08T19:41:49Z","language":"JavaScript","topics":["heroku","javascript","js"]},{"id":"76814721","name":"Cars","url":"https://github.com/adamatti/Cars","description":"Pet ptoject to find specific cars in the internet (yea, planning to buy one)","createdAt":"2016-12-19T00:20:18Z","language":"JavaScript","topics":["angularjs","javascript","js"]},{"id":"62009300","name":"tasks","url":"https://github.com/adamatti/tasks","description":"Manage project tasks","createdAt":"2016-06-26T21:33:11Z","language":"JavaScript","topics":["javascript","js","kanban"]},{"id":"61900907","name":"LearnRabbitMQ","url":"https://github.com/adamatti/LearnRabbitMQ","description":"Pet project to play with RabbitMQ","createdAt":"2016-06-24T17:26:24Z","language":"JavaScript","topics":["javascript","js","nodejs","rabbitmq"]},{"id":"56825533","name":"LearnSocial","url":"https://github.com/adamatti/LearnSocial","description":"Pet project to learn how to do auth with social apps","createdAt":"2016-04-22T04:10:46Z","language":"JavaScript","topics":["auth","javascript","js"]},{"id":"56240751","name":"LearnMongoose","url":"https://github.com/adamatti/LearnMongoose","description":"Pet project to learn Mongoose","createdAt":"2016-04-14T13:43:37Z","language":"JavaScript","topics":["javascript","js","mongo","orm"]},{"id":"56240560","name":"LearnPromisedMongo","url":"https://github.com/adamatti/LearnPromisedMongo","description":"Pet projet to learn promised-mongo","createdAt":"2016-04-14T13:40:59Z","language":"JavaScript","topics":["javascript","js","mongo","orm"]},{"id":"56202980","name":"LearnMongo","url":"https://github.com/adamatti/LearnMongo","description":null,"createdAt":"2016-04-14T03:02:31Z","language":"JavaScript","topics":["javascript","js","mongo"]}]},"__N_SSG":true}