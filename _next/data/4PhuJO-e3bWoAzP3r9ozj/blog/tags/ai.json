{"pageProps":{"tag":"ai","posts":[{"slug":"2025-04-25-mcp-cli","title":"MCP sample - CLI","summary":"A basic MCP sample for CLI with typescript","dateString":"2025-04-25","tags":["typescript","ai","mcp"],"content":"\nThe idea here is not explain what MCP is, just show a sample:\n\n# Dependencies\n\nInstall it with npm/yarn/pnpm:\n\n- @modelcontextprotocol/sdk\n- zod\n\n# Code\n\n```typescript\nimport { Server } from \"@modelcontextprotocol/sdk/server/index.js\";\nimport { StdioServerTransport } from \"@modelcontextprotocol/sdk/server/stdio.js\";\nimport {\n  CallToolRequestSchema,\n  ListToolsRequestSchema,\n} from \"@modelcontextprotocol/sdk/types.js\";\nimport { z } from \"zod\";\n\nconst tools = [\n  {\n    name: \"Sum\",\n    description: \"do a sum\",\n    inputSchema: z.object({ x: z.number(), y: z.number() }),\n    handler: (args) => ({\n      content: [\n        { type: \"text\", text: `${args.x} + ${args.y} = ${args.x + args.y}` },\n      ],\n    }),\n  },\n];\n\nconst server = new Server(\n  { name: \"mcp-server\", version: \"0.0.1\" },\n  { capabilities: { tools: {} } }\n);\nserver.setRequestHandler(ListToolsRequestSchema, async () => {\n  return {\n    tools: tools.map((t) => ({\n      name: t.name,\n      description: t.description,\n      parameters: t.inputSchema,\n    })),\n  };\n});\n\nserver.setRequestHandler(CallToolRequestSchema, async (request) => {\n  const { name, arguments: args } = request.params;\n\n  try {\n    const tool = tools.find((t) => t.name === name);\n    if (!tool) {\n      throw new Error(`Tool unknown: ${name}`);\n    }\n    return await tool.handler(args);\n  } catch (error) {\n    console.error(`Error executing tool ${name}:`, error);\n    throw error;\n  }\n});\n\nconst main = async () => {\n  const transport = new StdioServerTransport();\n  await server.connect(transport);\n};\n\nmain();\n```\n\n# Sample calling\n\nList tools:\n\n```sh\necho '{\"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"tools/list\"}' | pnpm dlx tsx cli.ts\n```\n\nExecuting operation:\n\n```sh\necho '{\"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"tools/call\", \"params\": {\"name\": \"Sum\", \"arguments\": {\"x\": 1, \"y\": 2}}}' | pnpm dlx tsx cli.ts\n```\n"}]},"__N_SSG":true}