{"pageProps":{"posts":[{"slug":"2023-12-30-tdc","title":"TDC - API Track","summary":null,"dateString":"2023-12-30","tags":["events","tdc"],"content":"\n<div style=\"align:center\">\n  ![Caricatura](/assets/posts/2023-12-30-tdc/caricatura.png)\n</div>\n\nOne more year I participated on [The Dev Conf](https://thedevconf.com/tdc/2023/future/trilha-api) as a track coordinator, API this time. One more row to [my profile there](https://thedevconf.com/palestrante/MarceloAdamatti).\n\nWe had talks about:\n\n- Legacy of Microservices\n- REST controllers\n- Governance\n- Contract tests\n- Open Telemetry\n- API Gateway\n- GraphQL\n\nWe had great feedback score from the audience (lowest avg vote was 4.3 of 5).\n\nThe photos are available [here](https://thedevconf.com/tdc/2022/future/fotos).\n\n#### To the speaker and track coordinators\n\nThanks a lot for all the efforts, dedication, time expended... We had a great event, it wouldn't be possible without that.\n\n#### To event coordinators\n\nThanks for pick me, it is a recognition of my work.\n\n#### To the audience\n\nI hope everyone enjoined as the feedback scored said. TDC is a community event, we did the talk selection based on what we thought would be the best for the audience. It is not easy to pick 7 from a good amount of submissions.\n\n#### To myself in future\n\nIt is a lot of work/coordination prior the event: people will cancel, have problems with the time of the slot, etc. But during and in the pass, the event is a great experience."},{"slug":"2023-07-04-happiness","title":"What happens when developers are (un)happy","summary":"Great article/reflection about happiness","dateString":"2023-07-04","tags":["happiness"],"content":"\nThis post is more a reminder to myself, as I keep searching about happiness formulas and reasons for unhappiness / poison behaviours. \n\nI just watched the video bellow (`O que acontece quando pessoas desenvolvedoras de software ficam (in) felizes?`), based on [this article](https://www.sciencedirect.com/science/article/pii/S0164121218300323?via%3Dihub).\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/1LSqxCZ-83U\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen style=\"text-align: center\"></iframe>\n\nTake a look on the consequences of unhappiness and happiness.\n\n![Consequences of unhappiness](/assets/posts/2023-07-04-happiness/unhappy.jpg)\n\n![Consequences of happiness](/assets/posts/2023-07-04-happiness/happy.jpg)\n\nDevelopment goes beyond code, product and methodologies. \n\nDifferent methodologies (e.g. scrum/kanban) will not address unhappiness issues."},{"slug":"2023-03-27-pyramid-of-needs","title":"The Pyramid of Needs","summary":"My insights on that topic","dateString":"2023-03-27","tags":["leadership","grow"],"content":"\nToday I received the [Refactoring newsletter](https://refactoring.fm/p/on-design-sweet-spot-threat-modeling) (which strongly recommend to sign in), and one of the sections caused me some reflections, the \"Pyramid of Needs\".\n\nWhile I had previously heard of [Maslow's hierarchy of needs](https://en.wikipedia.org/wiki/Maslow%27s_hierarchy_of_needs), this pyramid is specifically relevant to one's career.\n\nThis is the image from the post:\n\n![Pyramid of Needs](/assets/posts/pyramid-of-needs.webp)\n\n... and I strongly recommend you (reader) to go to the [original post]((https://refactoring.fm/p/on-design-sweet-spot-threat-modeling) ) to check all the details.\n\n- The majority of the professional that I knew were more interested (or stuck) in the *individual* layer. \n- The best ones (that I know, IMHO) passed the *Teamwork* layer.\n- I was 200% in the item *I have opportunities to learn and grow*. But it doesn't work if the *teamwork* layer (and the ones bellow) aren't fulfilled."},{"slug":"2023-03-16-quarkus","title":"Quarkus - a new try on native images","summary":"A blazing fast spring competitor","dateString":"2023-03-16","tags":["quarkus","java","jvm","gradle"],"content":"\nThree years ago I did some tests using [quarkus](https://quarkus.io/), to use on some microservices / pet projects. The commands to make it run using native binary are on this [gist](https://gist.github.com/adamatti/4633a7559647aaf779d60e3aad543b6b).\n\nToday I tried it again, just registering here my steps:\n\n### 1. Install quarkus\n\nI am using [sdkman](https://sdkman.io/) for it - it is a java version manager, similar to [fnm](https://github.com/Schniz/fnm) (for node).\n\nIt is easy as `sdk install quarkus`.\n\n### 2. Create a project\n\nJust need to run:\n\n```shell\nquarkus create app adamatti.github.io:learn-quarkus --extension='resteasy-reactive' --gradle\n```\n\nWhere `learn-quarkus` is the project name and `adamatti.github.io` is the main package name.\n\nYes, I decided to use [gradle](https://gradle.org/) instead of [maven](https://maven.apache.org/). Not willing to use XML in 2023 :-p\n\nThen I added this extension to build inside a docker container: \n\n```shell\ngradle addExtension --extensions=quarkus-container-image-docker\n```\n\n### 3. Run\n\n`./gradlew quarkusDev`. I can't deny, it is amazing be able to change source files without the need to stop/start the application multiple times\n\n### 4. Build native\n\n```shell\n./gradlew build -Dquarkus.package.type=native -Dquarkus.native.container-build=true\n```\n\nWith this, you don't need to have [graalvm](https://www.graalvm.org/) on local machine.\n\nThe binary file was created on `build` folder as `learn-quarkus-1.0.0-SNAPSHOT-runner`. It took ~4mins on my machine (Apple M1), 40mb is the size.\n\n### 5. Run the binary in a docker container\n\n... just to make sure it doesn't need any of the dependencies in my local machine (e.g. java) and simulate a real deploy.\n\n```shell\ndocker run --rm -it \\\n    -p \"8080:8080\" \\\n    -v ${PWD}/build/learn-quarkus-1.0.0-SNAPSHOT-runner:/app \\\n    centos \\\n    /app -Dquarkus.http.host=0.0.0.0\n```\n\n### Extra - version configuration\n\nJust created a `.sdkmanrc` file to make sure I would use the same versions in the future: \n\n```shell\n# Enable auto-env through the sdkman_auto_env config\n# Add key=value pairs of SDKs to use below\njava=11.0.11.9.1-amzn\ngradle=7.5.1\nquarkus=3.0.0.Alpha6\n```\n\n### Conclusion\n\n1. Quarkus is really fast, I would love to work with it in production\n2. Really loved the way the resources/controllers are created, e.g. \n\n```java\npackage adamatti.github.io;\n\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.MediaType;\n\n@Path(\"/hello\")\npublic class GreetingResource {\n\n    @GET\n    @Produces(MediaType.TEXT_PLAIN)\n    public String hello() {\n        return \"Hello from RESTEasy Reactive\";\n    }\n}\n```\n\n3. Loved the tests created with Gherkin syntax: \n\n```java\npackage adamatti.github.io;\n\nimport io.quarkus.test.junit.QuarkusTest;\nimport org.junit.jupiter.api.Test;\n\nimport static io.restassured.RestAssured.given;\nimport static org.hamcrest.CoreMatchers.is;\n\n@QuarkusTest\npublic class GreetingResourceTest {\n\n    @Test\n    public void testHelloEndpoint() {\n        given()\n          .when().get(\"/hello\")\n          .then()\n             .statusCode(200)\n             .body(is(\"Hello from RESTEasy Reactive\"));\n    }\n\n}\n```\n\n4. It also create tests for the native version (powered by the additional annotation):\n\n```java\npackage adamatti.github.io;\n\nimport io.quarkus.test.junit.QuarkusIntegrationTest;\n\n@QuarkusIntegrationTest\npublic class GreetingResourceIT extends GreetingResourceTest {\n    // Execute the same tests but in packaged mode.\n}\n```\n\n5. [Micronault](https://micronaut.io/) is still my prefered [spring](https://spring.io/) replacement, but this is a subject for another topic.\n\nI still curious about Quarkus usage, let's keep watching and see how does it goes."},{"slug":"2023-03-15-chatgpt-full-potential","title":"How to unlock ChatGPT full potential","summary":"a great prompt for better results","dateString":"2023-03-15","tags":["chatgpt"],"content":"\nJust received it on [this newsletter](https://atalho.substack.com/p/597-o-prompt-dos-prompts-como-desbloquear), it is helping me a lot for better prompts:\n\n```\nI want you to become my prompt engineer. Your goal is to help me craft the best possible prompt for my needs. The prompt will be used by you, ChatGPT. You will follow the following process:\n\n1. Your first response will be to ask me what the prompt should be about. I will provide my answer, but we will need to improve it through continual iterations by going through the next steps.\n\n2. Based on my input, you will generate 2 sections. a) Revised prompt (provide your rewritten prompt. it should be clear, concise, and easily understood by you), b) Questions (ask any relevant questions pertaining to what additional information is needed from me to improve the prompt).\n\n3. We will continue this iterative process with me providing additional information to you and you updating the prompt in the Revised prompt section until I say we are done.\n```\n\nHope it does help you too. \n\nGo to chat gpt [here](https://chat.openai.com/chat)"},{"slug":"2023-02-23-first","title":"First Blog post","summary":"Just a test post","dateString":"2023-02-23","tags":["test"],"content":"First blog post! \n\nThis is more a test to make it work. Thanks [@pixegami](https://www.youtube.com/watch?v=Hiabp1GY8fA) and [@Traversy Media\n](https://www.youtube.com/watch?v=MrjeefD8sac) for the great tutorials\n\nMy main goal here is to start producing content in English about programing languages, libraries, software development metodologies, leadership, culture, product, business... let's see how it goes, wish me lucky."}]},"__N_SSG":true}